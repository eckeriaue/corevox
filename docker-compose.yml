
services:
  phonix_monolith:
    container_name: phonix_monolith
    build:
      context: ./mono
      dockerfile: Dockerfile.dev
    command: sh -c "mix ecto.create && mix ecto.migrate && mix phx.server"
    ports:
      - "4000:4000"
    volumes:
      - ./mono:/app
      - /app/deps
      - /app/_build
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - TURN_USER=${TURN_USER}
      - TURN_PASSWORD=${TURN_PASSWORD}
      - TURN_REALM=${TURN_REALM}
    depends_on:
      - phonix_postgres
      - phonix_coturn

  phonix_coturn:
    container_name: phonix_coturn
    image: instrumentisto/coturn
    restart: unless-stopped
    ports:
      - "3478:3478"
      - "3478:3478/tcp"
      - "49160-49200:49160-49200/udp"
    command: >
      turnserver
        -a
        -v
        --no-dtls
        --no-tls
        --lt-cred
        --fingerprint
        --user=${TURN_USER}:${TURN_PASSWORD}
        --realm=${TURN_REALM}
        --total-quota=100
        --bps-capacity=0
        --min-port=49160
        --max-port=49200
    env_file:
      - ./.env

  phonix_postgres:
    container_name: phonix_postgres
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    env_file: ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}

    volumes:
      - ./data:/var/lib/postgresql/data
