# ============================================
# ⚡ Как выпустить сертификат Let's Encrypt (certbot)
#
# 1. При первом запуске закомментируйте HTTPS-сервер (ниже)
#    и раскомментируйте HTTP-сервер (ещё ниже в файле).
#
# 2. Выполните команду:
#
#    docker compose run --rm certbot certonly \
#      --webroot -w /var/www/certbot \
#      -d yourdomain.com -d www.yourdomain.com \
#      --email youremail@example.com --agree-tos --no-eff-email
#
# 3. После успешной генерации сертификата
#    верните HTTPS-конфигурацию и закомментируйте HTTP-сервер.
#
# 4. Сертификаты появятся в ./nginx/certbot/conf/live/yourdomain.com/
# ============================================


# --- ВРЕМЕННЫЙ СЕРВЕР ДЛЯ ПЕРВОГО ЗАПУСКА (certbot challenge) ---
# server {
#     listen 80;
#     server_name yourdomain.com www.yourdomain.com;
#
#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }
#
#     location / {
#         return 301 https://$host$request_uri;
#     }
# }

server {
    listen 443 ssl http2;
    server_name corevox.ru www.corevox.ru;

    ssl_certificate /etc/letsencrypt/live/corevox.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/corevox.ru/privkey.pem;

    location / {
        proxy_pass http://corevox_web:4321;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /socket {
        proxy_pass http://corevox_app:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /signal-server {
        proxy_pass http://corevox_signal_server:9000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

gzip on;
gzip_comp_level 6;
gzip_min_length 256;
gzip_proxied any;
gzip_vary on;
gzip_types
    text/plain
    text/css
    text/javascript
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    application/atom+xml
    font/ttf
    font/woff
    font/woff2
    image/svg+xml;
